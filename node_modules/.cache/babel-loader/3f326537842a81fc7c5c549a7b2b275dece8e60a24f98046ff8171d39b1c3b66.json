{"ast":null,"code":"var _jsxFileName = \"/home/sara/ol-app/src/Principles.js\";\n// src/WaveButtonCanvas.js\nimport React from 'react';\nimport { Stage, Layer, Rect, Circle, Text, Group, Shape } from 'react-konva';\nimport WaveButton from './WaveButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OLDiagram = () => {\n  function getPrinciples() {\n    const x = 200;\n    const y = 200;\n    const width = 170;\n    const height = 110;\n    const cornerRadius = 40;\n    const color = '#99f6be';\n    const halfWidth = width / 2;\n    const halfHeight = height / 2;\n    const margin = 3;\n    const p1 = {\n      x: x,\n      y: y\n    };\n    const p2 = {\n      x: x - halfWidth - margin,\n      y: y - halfHeight - margin\n    };\n    const p3 = {\n      x: x + halfWidth + margin,\n      y: y - halfHeight - margin\n    };\n    const p4 = {\n      x: x,\n      y: y - height - 2 * margin\n    };\n    const p5 = {\n      x: x - halfWidth - margin,\n      y: y + halfHeight + margin\n    };\n    const p6 = {\n      x: x + halfWidth + margin,\n      y: y + halfHeight + margin\n    };\n    const p7 = {\n      x: x,\n      y: y + height + 2 * margin\n    };\n    const arr = [0, 1, 2, 3, 4, 5, 6];\n    const refPoints = [p1, p2, p3, p4, p5, p6, p7];\n    const mainTexts = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\n    const idTexts = ['P1', 'P2', 'P3', 'P4', 'P5', 'P6', 'P7'];\n    const infoTexts = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n    return arr.map(i => ({\n      id: i.toString(),\n      x: refPoints[i].x,\n      y: refPoints[i].y,\n      mainText: mainTexts[i],\n      idText: idTexts[i],\n      infoText: infoTexts[i]\n    }));\n  }\n  const principles = arr.map(i => /*#__PURE__*/_jsxDEV(WaveButton, {\n    width: width,\n    height: height,\n    cornerRadius: cornerRadius,\n    color: color,\n    all_principles: all_principles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    children: all_principles.map(p => /*#__PURE__*/_jsxDEV(Layer, {\n      children: [/*#__PURE__*/_jsxDEV(Shape, {\n        sceneFunc: (context, shape) => {\n          //drawWaveButton(p['x'], p['y'])\n          const halfWidth = width / 2;\n          const halfHeight = height / 2;\n          const top = {\n            x: p['x'],\n            y: p['y'] - halfHeight\n          };\n          const right = {\n            x: p['x'] + halfWidth,\n            y: p['y']\n          };\n          const bottom = {\n            x: p['x'],\n            y: p['y'] + halfHeight\n          };\n          const left = {\n            x: p['x'] - halfWidth,\n            y: p['y']\n          };\n          context.beginPath();\n          context.moveTo(right.x, right.y);\n          context.arcTo(bottom.x, bottom.y, left.x, left.y, cornerRadius);\n          context.lineTo(left.x, left.y);\n          context.arcTo(top.x, top.y, right.x, right.y, cornerRadius);\n          context.closePath();\n          context.fillStrokeShape(shape);\n        },\n        id: p['id'],\n        fill: color,\n        onClick: handleClick\n        //disabled={isDisabled}\n      }, p['id'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: 20,\n        text: p['mainText'],\n        align: \"center\",\n        x: p['x'],\n        y: p['y']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_c = OLDiagram;\nexport default OLDiagram;\nvar _c;\n$RefreshReg$(_c, \"OLDiagram\");","map":{"version":3,"names":["React","Stage","Layer","Rect","Circle","Text","Group","Shape","WaveButton","jsxDEV","_jsxDEV","OLDiagram","getPrinciples","x","y","width","height","cornerRadius","color","halfWidth","halfHeight","margin","p1","p2","p3","p4","p5","p6","p7","arr","refPoints","mainTexts","idTexts","infoTexts","map","i","id","toString","mainText","idText","infoText","principles","all_principles","fileName","_jsxFileName","lineNumber","columnNumber","window","innerWidth","innerHeight","children","p","sceneFunc","context","shape","top","right","bottom","left","beginPath","moveTo","arcTo","lineTo","closePath","fillStrokeShape","fill","onClick","handleClick","fontSize","text","align","_c","$RefreshReg$"],"sources":["/home/sara/ol-app/src/Principles.js"],"sourcesContent":["// src/WaveButtonCanvas.js\nimport React from 'react';\nimport { Stage, Layer, Rect, Circle, Text, Group, Shape } from 'react-konva';\nimport WaveButton from './WaveButton';\n\nconst OLDiagram = () => {\n\n    function getPrinciples() {\n        const x = 200;\n        const y = 200;\n        const width = 170;\n        const height = 110;\n        const cornerRadius = 40;\n        const color = '#99f6be';\n    \n        const halfWidth = width / 2;\n        const halfHeight = height / 2;\n        const margin = 3;\n    \n        const p1 = { x: x, y: y };\n        const p2 = { x: x - halfWidth - margin, y: y - halfHeight - margin };\n        const p3 = { x: x + halfWidth + margin, y: y - halfHeight - margin };\n        const p4 = { x: x, y: y - height - 2 * margin };\n        const p5 = { x: x - halfWidth - margin, y: y + halfHeight + margin };\n        const p6 = { x: x + halfWidth + margin, y: y + halfHeight + margin };\n        const p7 = { x: x, y: y + height + 2 * margin };\n\n        const arr = [0, 1, 2, 3, 4, 5, 6];\n        const refPoints = [p1, p2, p3, p4, p5, p6, p7];\n        const mainTexts = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\n        const idTexts = ['P1', 'P2', 'P3', 'P4', 'P5', 'P6', 'P7'];\n        const infoTexts = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n    \n        return arr.map((i) => ({\n            id: i.toString(),\n            x: refPoints[i].x,\n            y: refPoints[i].y,\n            mainText: mainTexts[i],\n            idText: idTexts[i],\n            infoText: infoTexts[i],\n        }));\n    }\n\n\n\n\n\n    const principles = arr.map((i) => \n        <WaveButton \n            width={width}\n            height={height}\n            cornerRadius={cornerRadius} \n            color={color}\n            all_principles = {all_principles}\n        />\n    );\n\n\n    return (\n        <Stage width={window.innerWidth} height={window.innerHeight}>\n      {all_principles.map((p) => (\n      <Layer>\n        <Shape\n          sceneFunc={(context, shape) => {\n            //drawWaveButton(p['x'], p['y'])\n            const halfWidth = width / 2;\n            const halfHeight = height / 2;\n          \n            const top = { x: p['x'], y: p['y'] - halfHeight };\n            const right = { x: p['x'] + halfWidth, y: p['y'] };\n            const bottom = { x: p['x'], y: p['y'] + halfHeight };\n            const left = { x: p['x'] - halfWidth, y: p['y'] };\n\n            context.beginPath();\n            context.moveTo(right.x, right.y);\n            context.arcTo(bottom.x, bottom.y, left.x, left.y, cornerRadius);\n            context.lineTo(left.x, left.y);\n            context.arcTo(top.x, top.y, right.x, right.y, cornerRadius);\n            context.closePath();\n            context.fillStrokeShape(shape);\n          }}\n          key={p['id']}\n          id={p['id']}\n          fill={color}\n          onClick={handleClick}\n          //disabled={isDisabled}\n        />\n        <Text fontSize={20} text={p['mainText']} align=\"center\" x={p['x']} y={p['y']}/>\n      </Layer>\n      ))}   \n    </Stage>\n    );\n};\n\nexport default OLDiagram;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,aAAa;AAC5E,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAEpB,SAASC,aAAaA,CAAA,EAAG;IACrB,MAAMC,CAAC,GAAG,GAAG;IACb,MAAMC,CAAC,GAAG,GAAG;IACb,MAAMC,KAAK,GAAG,GAAG;IACjB,MAAMC,MAAM,GAAG,GAAG;IAClB,MAAMC,YAAY,GAAG,EAAE;IACvB,MAAMC,KAAK,GAAG,SAAS;IAEvB,MAAMC,SAAS,GAAGJ,KAAK,GAAG,CAAC;IAC3B,MAAMK,UAAU,GAAGJ,MAAM,GAAG,CAAC;IAC7B,MAAMK,MAAM,GAAG,CAAC;IAEhB,MAAMC,EAAE,GAAG;MAAET,CAAC,EAAEA,CAAC;MAAEC,CAAC,EAAEA;IAAE,CAAC;IACzB,MAAMS,EAAE,GAAG;MAAEV,CAAC,EAAEA,CAAC,GAAGM,SAAS,GAAGE,MAAM;MAAEP,CAAC,EAAEA,CAAC,GAAGM,UAAU,GAAGC;IAAO,CAAC;IACpE,MAAMG,EAAE,GAAG;MAAEX,CAAC,EAAEA,CAAC,GAAGM,SAAS,GAAGE,MAAM;MAAEP,CAAC,EAAEA,CAAC,GAAGM,UAAU,GAAGC;IAAO,CAAC;IACpE,MAAMI,EAAE,GAAG;MAAEZ,CAAC,EAAEA,CAAC;MAAEC,CAAC,EAAEA,CAAC,GAAGE,MAAM,GAAG,CAAC,GAAGK;IAAO,CAAC;IAC/C,MAAMK,EAAE,GAAG;MAAEb,CAAC,EAAEA,CAAC,GAAGM,SAAS,GAAGE,MAAM;MAAEP,CAAC,EAAEA,CAAC,GAAGM,UAAU,GAAGC;IAAO,CAAC;IACpE,MAAMM,EAAE,GAAG;MAAEd,CAAC,EAAEA,CAAC,GAAGM,SAAS,GAAGE,MAAM;MAAEP,CAAC,EAAEA,CAAC,GAAGM,UAAU,GAAGC;IAAO,CAAC;IACpE,MAAMO,EAAE,GAAG;MAAEf,CAAC,EAAEA,CAAC;MAAEC,CAAC,EAAEA,CAAC,GAAGE,MAAM,GAAG,CAAC,GAAGK;IAAO,CAAC;IAE/C,MAAMQ,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjC,MAAMC,SAAS,GAAG,CAACR,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IAC9C,MAAMG,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACrD,MAAMC,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC1D,MAAMC,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAErD,OAAOJ,GAAG,CAACK,GAAG,CAAEC,CAAC,KAAM;MACnBC,EAAE,EAAED,CAAC,CAACE,QAAQ,CAAC,CAAC;MAChBxB,CAAC,EAAEiB,SAAS,CAACK,CAAC,CAAC,CAACtB,CAAC;MACjBC,CAAC,EAAEgB,SAAS,CAACK,CAAC,CAAC,CAACrB,CAAC;MACjBwB,QAAQ,EAAEP,SAAS,CAACI,CAAC,CAAC;MACtBI,MAAM,EAAEP,OAAO,CAACG,CAAC,CAAC;MAClBK,QAAQ,EAAEP,SAAS,CAACE,CAAC;IACzB,CAAC,CAAC,CAAC;EACP;EAMA,MAAMM,UAAU,GAAGZ,GAAG,CAACK,GAAG,CAAEC,CAAC,iBACzBzB,OAAA,CAACF,UAAU;IACPO,KAAK,EAAEA,KAAM;IACbC,MAAM,EAAEA,MAAO;IACfC,YAAY,EAAEA,YAAa;IAC3BC,KAAK,EAAEA,KAAM;IACbwB,cAAc,EAAIA;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CACL,CAAC;EAGD,oBACIpC,OAAA,CAACT,KAAK;IAACc,KAAK,EAAEgC,MAAM,CAACC,UAAW;IAAChC,MAAM,EAAE+B,MAAM,CAACE,WAAY;IAAAC,QAAA,EAC7DR,cAAc,CAACR,GAAG,CAAEiB,CAAC,iBACtBzC,OAAA,CAACR,KAAK;MAAAgD,QAAA,gBACJxC,OAAA,CAACH,KAAK;QACJ6C,SAAS,EAAEA,CAACC,OAAO,EAAEC,KAAK,KAAK;UAC7B;UACA,MAAMnC,SAAS,GAAGJ,KAAK,GAAG,CAAC;UAC3B,MAAMK,UAAU,GAAGJ,MAAM,GAAG,CAAC;UAE7B,MAAMuC,GAAG,GAAG;YAAE1C,CAAC,EAAEsC,CAAC,CAAC,GAAG,CAAC;YAAErC,CAAC,EAAEqC,CAAC,CAAC,GAAG,CAAC,GAAG/B;UAAW,CAAC;UACjD,MAAMoC,KAAK,GAAG;YAAE3C,CAAC,EAAEsC,CAAC,CAAC,GAAG,CAAC,GAAGhC,SAAS;YAAEL,CAAC,EAAEqC,CAAC,CAAC,GAAG;UAAE,CAAC;UAClD,MAAMM,MAAM,GAAG;YAAE5C,CAAC,EAAEsC,CAAC,CAAC,GAAG,CAAC;YAAErC,CAAC,EAAEqC,CAAC,CAAC,GAAG,CAAC,GAAG/B;UAAW,CAAC;UACpD,MAAMsC,IAAI,GAAG;YAAE7C,CAAC,EAAEsC,CAAC,CAAC,GAAG,CAAC,GAAGhC,SAAS;YAAEL,CAAC,EAAEqC,CAAC,CAAC,GAAG;UAAE,CAAC;UAEjDE,OAAO,CAACM,SAAS,CAAC,CAAC;UACnBN,OAAO,CAACO,MAAM,CAACJ,KAAK,CAAC3C,CAAC,EAAE2C,KAAK,CAAC1C,CAAC,CAAC;UAChCuC,OAAO,CAACQ,KAAK,CAACJ,MAAM,CAAC5C,CAAC,EAAE4C,MAAM,CAAC3C,CAAC,EAAE4C,IAAI,CAAC7C,CAAC,EAAE6C,IAAI,CAAC5C,CAAC,EAAEG,YAAY,CAAC;UAC/DoC,OAAO,CAACS,MAAM,CAACJ,IAAI,CAAC7C,CAAC,EAAE6C,IAAI,CAAC5C,CAAC,CAAC;UAC9BuC,OAAO,CAACQ,KAAK,CAACN,GAAG,CAAC1C,CAAC,EAAE0C,GAAG,CAACzC,CAAC,EAAE0C,KAAK,CAAC3C,CAAC,EAAE2C,KAAK,CAAC1C,CAAC,EAAEG,YAAY,CAAC;UAC3DoC,OAAO,CAACU,SAAS,CAAC,CAAC;UACnBV,OAAO,CAACW,eAAe,CAACV,KAAK,CAAC;QAChC,CAAE;QAEFlB,EAAE,EAAEe,CAAC,CAAC,IAAI,CAAE;QACZc,IAAI,EAAE/C,KAAM;QACZgD,OAAO,EAAEC;QACT;MAAA,GAJKhB,CAAC,CAAC,IAAI,CAAC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CAAC,eACFpC,OAAA,CAACL,IAAI;QAAC+D,QAAQ,EAAE,EAAG;QAACC,IAAI,EAAElB,CAAC,CAAC,UAAU,CAAE;QAACmB,KAAK,EAAC,QAAQ;QAACzD,CAAC,EAAEsC,CAAC,CAAC,GAAG,CAAE;QAACrC,CAAC,EAAEqC,CAAC,CAAC,GAAG;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ,CAAC;AAACyB,EAAA,GAvFI5D,SAAS;AAyFf,eAAeA,SAAS;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}