{"ast":null,"code":"var _jsxFileName = \"/home/sara/thesis/src/WaveButton.js\";\n// src/WaveButtonCanvas.js\nimport React, { useState, useRef } from 'react';\nimport { Stage, Layer, Rect, Circle, Text, Group, Shape } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WaveButton = ({\n  id,\n  width,\n  height,\n  cornerRadius,\n  color,\n  all_principles\n}) => {\n  const handleClick = e => {\n    const id = e.target.id();\n    console.log(all_principles[id]);\n    alert(all_principles[id]['infoText']);\n  };\n\n  // function drawWaveButton(x, y, width, height, cornerRadius, color, context, shape) {\n  //   const halfWidth = width / 2;\n  //   const halfHeight = height / 2;\n\n  //   const top = { x: x, y: y - halfHeight };\n  //   const right = { x: x + halfWidth, y: y };\n  //   const bottom = { x: x, y: y + halfHeight };\n  //   const left = { x: x - halfWidth, y: y };\n\n  //   context.beginPath();\n  //   context.moveTo(right.x, right.y);\n  //   context.arcTo(bottom.x, bottom.y, left.x, left.y, cornerRadius);\n  //   context.lineTo(left.x, left.y);\n  //   context.arcTo(top.x, top.y, right.x, right.y, cornerRadius);\n  //   context.closePath();\n  //   context.fillStrokeShape(shape);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    children: all_principles.map(p => /*#__PURE__*/_jsxDEV(Layer, {\n      children: [/*#__PURE__*/_jsxDEV(Shape, {\n        sceneFunc: (context, shape) => {\n          //drawWaveButton(p['x'], p['y'])\n          const halfWidth = width / 2;\n          const halfHeight = height / 2;\n          const top = {\n            x: p['x'],\n            y: p['y'] - halfHeight\n          };\n          const right = {\n            x: p['x'] + halfWidth,\n            y: p['y']\n          };\n          const bottom = {\n            x: p['x'],\n            y: p['y'] + halfHeight\n          };\n          const left = {\n            x: p['x'] - halfWidth,\n            y: p['y']\n          };\n          context.beginPath();\n          context.moveTo(right.x, right.y);\n          context.arcTo(bottom.x, bottom.y, left.x, left.y, cornerRadius);\n          context.lineTo(left.x, left.y);\n          context.arcTo(top.x, top.y, right.x, right.y, cornerRadius);\n          context.closePath();\n          context.fillStrokeShape(shape);\n        },\n        id: p['id'],\n        fill: color,\n        onClick: handleClick\n        //disabled={isDisabled}\n      }, p['id'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: 20,\n        text: p['mainText'],\n        align: \"center\",\n        x: p['x'],\n        y: p['y']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = WaveButton;\nexport default WaveButton;\n\n//transform this code to detect witch star was clicked and not dragged and separate into 3 file: 1 that has the code to draw a start, one that draws a group of starts and the App.js that calls the second one to render the group of stars.\nvar _c;\n$RefreshReg$(_c, \"WaveButton\");","map":{"version":3,"names":["React","useState","useRef","Stage","Layer","Rect","Circle","Text","Group","Shape","jsxDEV","_jsxDEV","WaveButton","id","width","height","cornerRadius","color","all_principles","handleClick","e","target","console","log","alert","window","innerWidth","innerHeight","children","map","p","sceneFunc","context","shape","halfWidth","halfHeight","top","x","y","right","bottom","left","beginPath","moveTo","arcTo","lineTo","closePath","fillStrokeShape","fill","onClick","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","text","align","_c","$RefreshReg$"],"sources":["/home/sara/thesis/src/WaveButton.js"],"sourcesContent":["// src/WaveButtonCanvas.js\nimport React, { useState, useRef } from 'react';\nimport { Stage, Layer, Rect, Circle, Text, Group, Shape } from 'react-konva';\n\nconst WaveButton = ({ id, width, height, cornerRadius, color, all_principles }) => {\n\n  const handleClick = (e) => {\n    const id = e.target.id();\n    console.log(all_principles[id]);\n    alert(all_principles[id]['infoText'])\n  }\n\n  // function drawWaveButton(x, y, width, height, cornerRadius, color, context, shape) {\n  //   const halfWidth = width / 2;\n  //   const halfHeight = height / 2;\n          \n  //   const top = { x: x, y: y - halfHeight };\n  //   const right = { x: x + halfWidth, y: y };\n  //   const bottom = { x: x, y: y + halfHeight };\n  //   const left = { x: x - halfWidth, y: y };\n\n  //   context.beginPath();\n  //   context.moveTo(right.x, right.y);\n  //   context.arcTo(bottom.x, bottom.y, left.x, left.y, cornerRadius);\n  //   context.lineTo(left.x, left.y);\n  //   context.arcTo(top.x, top.y, right.x, right.y, cornerRadius);\n  //   context.closePath();\n  //   context.fillStrokeShape(shape);\n  // }\n\n  return (\n    <Stage width={window.innerWidth} height={window.innerHeight}>\n      {all_principles.map((p) => (\n      <Layer>\n        <Shape\n          sceneFunc={(context, shape) => {\n            //drawWaveButton(p['x'], p['y'])\n            const halfWidth = width / 2;\n            const halfHeight = height / 2;\n          \n            const top = { x: p['x'], y: p['y'] - halfHeight };\n            const right = { x: p['x'] + halfWidth, y: p['y'] };\n            const bottom = { x: p['x'], y: p['y'] + halfHeight };\n            const left = { x: p['x'] - halfWidth, y: p['y'] };\n\n            context.beginPath();\n            context.moveTo(right.x, right.y);\n            context.arcTo(bottom.x, bottom.y, left.x, left.y, cornerRadius);\n            context.lineTo(left.x, left.y);\n            context.arcTo(top.x, top.y, right.x, right.y, cornerRadius);\n            context.closePath();\n            context.fillStrokeShape(shape);\n          }}\n          key={p['id']}\n          id={p['id']}\n          fill={color}\n          onClick={handleClick}\n          //disabled={isDisabled}\n        />\n        <Text fontSize={20} text={p['mainText']} align=\"center\" x={p['x']} y={p['y']}/>\n      </Layer>\n      ))}   \n    </Stage>\n  );\n};\n\nexport default WaveButton;\n\n//transform this code to detect witch star was clicked and not dragged and separate into 3 file: 1 that has the code to draw a start, one that draws a group of starts and the App.js that calls the second one to render the group of stars.\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}